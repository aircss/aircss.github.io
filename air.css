/*! Air v1.1.0 | BSD License | https://aircss.io */
/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */

/* Document
   ========================================================================== */

/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */

html {
  line-height: 1.15; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
}

/* Sections
   ========================================================================== */

/**
 * Remove the margin in all browsers.
 */

body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */

main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */

hr {
  box-sizing: content-box; /* 1 */
  height: 0; /* 1 */
  overflow: visible; /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

pre {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/* Text-level semantics
   ========================================================================== */

/**
 * Remove the gray background on active links in IE 10.
 */

a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */

abbr[title] {
  border-bottom: none; /* 1 */
  text-decoration: underline; /* 2 */
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted; /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */

b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */

code,
kbd,
samp {
  font-family: monospace, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */

small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */

/**
 * Remove the border on images inside links in IE 10.
 */

img {
  border-style: none;
}

/* Forms
   ========================================================================== */

/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */

button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  line-height: 1.15; /* 1 */
  margin: 0; /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */

button,
input { /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */

button,
select { /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */

button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */

fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */

legend {
  box-sizing: border-box; /* 1 */
  color: inherit; /* 2 */
  display: table; /* 1 */
  max-width: 100%; /* 1 */
  padding: 0; /* 3 */
  white-space: normal; /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */

progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */

textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */

[type="checkbox"],
[type="radio"] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */

[type="search"] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */

[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */

::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/* Interactive
   ========================================================================== */

/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */

details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */

summary {
  display: list-item;
}

/* Misc
   ========================================================================== */

/**
 * Add the correct display in IE 10+.
 */

/**
 * Add the correct display in IE 10.
 */

template,[hidden] {
  display: none;
}

/*

  FORMS
   
*/

.input-reset {
  -webkit-appearance: none;
  appearance: none;
  border: 0;
  padding: 0;
}

.button-reset {
  border: 0;
  padding: 0;
  background: none;

}
/*

   LINKS
   Docs: http://aircss.io/docs/elements/links/

*/

.link {
  color: inherit;
  text-decoration: inherit;
}
.link,.link:link,
.link:visited,.link:hover,.link:active,.link:focus   {
  transition: color .15s ease-in;
}
.link:focus   {
  outline: 1px dotted currentColor;
}

/*

   LISTS
   http://aircss.io/docs/elements/lists/

*/

.list { list-style-type: none; }
html {
  height: 100vh;
  width: 100vw;
}
/*

  Hide child & reveal on hover:

  Put the hide-child class on a parent element and any nested element with the
  child class will be hidden and displayed on hover or focus.

  <div class="hide-child">
    <div class="child"> Hidden until hover or focus </div>
    <div class="child"> Hidden until hover or focus </div>
    <div class="child"> Hidden until hover or focus </div>
    <div class="child"> Hidden until hover or focus </div>
  </div>
*/

.hide-child .child {
  filter: opacity(0);
  transition: filter .15s ease-in;
}
.hide-child:hover  .child,
.hide-child:focus  .child,
.hide-child:active .child {
  filter: opacity(1);
  transition: filter .15s ease-in;
}


/*

  FONT SIZE
  Docs: http://aircss.io/docs/typography/font-size.html

  To create and design an easily readable interface, you only need a simple ratio-based scale to
  provide a wide array of visual possibilities and an efficient way to prioritize the information
  on anything you can build from web pages to a full-featured webapp.


  Mnemonics
  =========

  Bases:
    f = font-size

  Modifiers:
    -title = title dedicated size
    -subtitle = subtitle dedicated size
    1 = 1st step in size scale
    2 = 2nd step in size scale
    3 = 3rd step in size scale
    4 = 4th step in size scale
    5 = 5th step in size scale
    6 = 6th step in size scale
    7 = 7th step in size scale
    8 = 8th step in size scale

  Optional extensions:
    -m = medium width container
    -l = large width container

*/

/* csslint font-sizes: false */
/* generate: container-rule */
.f-title { font-size: 2.5rem; }
.f-subtitle { font-size: 2rem; }

.f1 { font-size: 1.75rem; }
.f2 { font-size: 1.5rem; }
.f3 { font-size: 1.375rem; }
.f4 { font-size: 1.25rem; }
.f5 { font-size: 1.125rem; }
.f6 { font-size: 1rem; }
.f7 { font-size: 0.875rem; }
.f8 { font-size: 0.75rem; }
/* end generate */

@media (min-width: 32rem) {
  .f-title-m { font-size: 2.5rem; }
  .f-subtitle-m { font-size: 2rem; }
  
  .f1-m { font-size: 1.75rem; }
  .f2-m { font-size: 1.5rem; }
  .f3-m { font-size: 1.375rem; }
  .f4-m { font-size: 1.25rem; }
  .f5-m { font-size: 1.125rem; }
  .f6-m { font-size: 1rem; }
  .f7-m { font-size: 0.875rem; }
  .f8-m { font-size: 0.75rem; }
}

@media (min-width: 64rem) {
  .f-title-l { font-size: 2.5rem; }
  .f-subtitle-l { font-size: 2rem; }
  
  .f1-l { font-size: 1.75rem; }
  .f2-l { font-size: 1.5rem; }
  .f3-l { font-size: 1.375rem; }
  .f4-l { font-size: 1.25rem; }
  .f5-l { font-size: 1.125rem; }
  .f6-l { font-size: 1rem; }
  .f7-l { font-size: 0.875rem; }
  .f8-l { font-size: 0.75rem; }
}
/*
  Line length (measure)
  Docs: http://aircss.io/docs/typography/measure.html

  Measure or line length is the distance between the left and right edges of a text
  block. Overly long lines are a common problem, but they're easy to correct. Shorter
  lines will make a big difference in the legibility and professionalism of your layout.


  Mnemonics
  =========

  Bases:
    ll = line-length

  Modifiers:
    -narrow — average length of 45 characters
    -medium — average length of 66 characters
    -wide — average length of 80 characters

  Optional extensions:
    -m = medium width container
    -l = large width container


  Shorthand
  =========

  It is possible to use the class name `llm` instead of `ll-medium`.

*/

/* generate: container-rule */
.ll-narrow { max-width: 45ch; }
.ll-medium { max-width: 66ch; }
.ll-wide { max-width: 80ch; }

.llm { max-width: 66ch; }
/* end generate */


@media (min-width: 32rem) {
  .ll-narrow-m { max-width: 45ch; }
  .ll-medium-m { max-width: 66ch; }
  .ll-wide-m { max-width: 80ch; }
  
  .llm-m { max-width: 66ch; }
}

@media (min-width: 64rem) {
  .ll-narrow-l { max-width: 45ch; }
  .ll-medium-l { max-width: 66ch; }
  .ll-wide-l { max-width: 80ch; }
  
  .llm-l { max-width: 66ch; }
}
/*

  LINE HEIGHT
  Docs: http://aircss.io/docs/typography/line-height.html

  It’s always a good practice to add some <span class="i">leading</span> to the type setting to
  open up the space between the line of the text. There is a sweet spot between too tight and too
  open leading which depends on the designer’s visual judgment.


  Mnemonics
  =========

  Bases:
    lh = line height

  Modifiers:
    -solid = solid leading (1)
    -title = title leading (1.25)
    -body = body leading (1.5)

*/

.lh-solid { line-height: 1; }
.lh-title { line-height: 1.25; }
.lh-body  { line-height: 1.5; }

/*

  TRACKING
  Docs: http://aircss.io/docs/typography/tracking.html

  Tracking affects the visual density of a word, phrase or paragraph. Decreasing the tracking makes
  the words appear more compact, while increasing tracking increases the amount of white space
  between letters and words, creating a more airy effect.


  Mnemonics
  =========

  Bases:
    tracked

  Modifiers:
    -tight
    -large
    -oversize

  Optional extensions:
    -m = medium width container
    -l = large width container


  Shorthand
  =========

  It is possible to use the class name `tracked` instead of `tracked-large`.

*/

/* generate: container-rule */
.tracked-tight { letter-spacing: -.05em; }
.tracked-large { letter-spacing: .1em; }
.tracked-oversize { letter-spacing: .25em; }
.tracked { letter-spacing: .1em; }
/* end generate */


@media (min-width: 32rem) {
  .tracked-tight-m { letter-spacing: -.05em; }
  .tracked-large-m { letter-spacing: .1em; }
  .tracked-oversize-m { letter-spacing: .25em; }
  .tracked-m { letter-spacing: .1em; }
}

@media (min-width: 64rem) {
  .tracked-tight-l { letter-spacing: -.05em; }
  .tracked-large-l { letter-spacing: .1em; }
  .tracked-oversize-l { letter-spacing: .25em; }
  .tracked-l { letter-spacing: .1em; }
}
/*

  FONT WEIGHT
  Docs: http://aircss.io/docs/typography/font-weight.html

  Varying the font-weight of different pieces of text can help create contrast between pieces of
  information. It can help call attention to a piece of content, or help to make a smaller font-size
  a bit more readable.


  Mnemonics
  =========

  Bases:
    fw = font-weight

  Modifiers:
    -normal = normal -- 400
    -bold = bold -- 700

    1 = thin -- 100
    2 = extra-light -- 200
    3 = light -- 300
    4 = normal -- 400
    5 = medium -- 500
    6 = semi-bold -- 600
    7 = bold -- 700
    8 = extra-bold -- 800
    9 = black -- 900

  Optional extensions:
    -m = medium width container
    -l = large width container


  Shorthand
  =========

  It is possible to use the class name `b` instead of `fw-bold` to get the same effect.

*/

/* generate: container-rule */
.fw-normal { font-weight: 400; }
.fw-bold { font-weight: 700; }

.fw1 { font-weight: 100; }
.fw2 { font-weight: 200; }
.fw3 { font-weight: 300; }
.fw4 { font-weight: 400; }
.fw5 { font-weight: 500; }
.fw6 { font-weight: 600; }
.fw7 { font-weight: 700; }
.fw8 { font-weight: 800; }
.fw9 { font-weight: 900; }

.b { font-weight: 700; }
/* end generate */

@media (min-width: 32rem) {
  .fw-normal-m { font-weight: 400; }
  .fw-bold-m { font-weight: 700; }
  
  .fw1-m { font-weight: 100; }
  .fw2-m { font-weight: 200; }
  .fw3-m { font-weight: 300; }
  .fw4-m { font-weight: 400; }
  .fw5-m { font-weight: 500; }
  .fw6-m { font-weight: 600; }
  .fw7-m { font-weight: 700; }
  .fw8-m { font-weight: 800; }
  .fw9-m { font-weight: 900; }
  
  .b-m { font-weight: 700; }
}

@media (min-width: 64rem) {
  .fw-normal-l { font-weight: 400; }
  .fw-bold-l { font-weight: 700; }
  
  .fw1-l { font-weight: 100; }
  .fw2-l { font-weight: 200; }
  .fw3-l { font-weight: 300; }
  .fw4-l { font-weight: 400; }
  .fw5-l { font-weight: 500; }
  .fw6-l { font-weight: 600; }
  .fw7-l { font-weight: 700; }
  .fw8-l { font-weight: 800; }
  .fw9-l { font-weight: 900; }
  
  .b-l { font-weight: 700; }
}
/*

  FONT STYLE
  Docs: http://aircss.io/docs/typography/font-style.html

  While italics are mainly used to draw attention to certain words or passages, the font style also
  plays an important role in differentiating the titles and names of things such as novels, movies,
  or vehicle names from other text.


  Mnemonics
  =========

  Bases:
    fs = font-style

  Modifiers:
    -normal
    -italic


  Shorthand
  =========

  It is possible to use the class name `i` instead of `fs-italic`.

*/

.fs-normal { font-style: normal; }

.fs-italic,.i { font-style: italic; }

/*

  TEXT ALIGN
  Docs: http://aircss.io/docs/typography/text-align.html

  Text alignment is a small but significant part of the interface. Alignment affects how our brain
  scans the content on a screen. A proper text alignment is one of the most distinct indicators of a
  professionally crafted digital product.


  Mnemonics
  =========

  Bases:
    t = text-align

  Modifiers:
    l = left
    r = right
    c = center
    j = justify

  Optional extensions:
    -m = medium width container
    -l = large width container

*/

/* generate: container-rule */
.tl  { text-align: left; }
.tr  { text-align: right; }
.tc  { text-align: center; }

.tj  {
  text-align: justify;
  -webkit-hyphens: auto;
          hyphens: auto;
}
/* end generate */


@media (min-width: 32rem) {
  .tl-m  { text-align: left; }
  .tr-m  { text-align: right; }
  .tc-m  { text-align: center; }
  
  .tj-m  {
  text-align: justify;
  -webkit-hyphens: auto;
          hyphens: auto;
  }
}

@media (min-width: 64rem) {
  .tl-l  { text-align: left; }
  .tr-l  { text-align: right; }
  .tc-l  { text-align: center; }
  
  .tj-l  {
  text-align: justify;
  -webkit-hyphens: auto;
          hyphens: auto;
  }
}
/*

  TEXT TRANSFORM
  Docs: http://aircss.io/docs/typography/text-transform.html

  Uppercase, title case and sentence can all be used in the same application. But if you are using
  title case for headings, all headings need to be in title case. Likewise, you can use sentence
  case for paragraphs. Use uppercase for standout texts only. The most important thing is
  consistency.


  Mnemonics
  =========

  Bases:
    tt = text-transform

  Modifiers:
    s = sentence
    t = title case
    u = uppercase

*/

.tts:first-letter { text-transform: uppercase; }
.ttt { text-transform: capitalize; }
.ttu { text-transform: uppercase; }

/*
  TEXT DECORATION
  Docs: http://aircss.io/docs/typography/text-decoration.html

  Underline and strikethrough decorations on a text are respectively used to add an
  emphasis or epanorthosis to all or part of it.


  Mnemonics
  =========

  Bases:
    td = text decoration

  Modifiers:
    -normal
    -strike
    -underline

  Optional extensions:
    -hvr = styled on hovering


  Shorthand
  =========

  It is possible to use the class name `u` instead of `td-underline`.

*/


/* generate: hover-rule */
.td-normal { text-decoration: none;}
.td-strike { text-decoration: line-through; }

.td-underline,.u { text-decoration: underline; }
/* end generate */

.td-normal-hvr:hover { text-decoration: none;}
.td-strike-hvr:hover { text-decoration: line-through; }

.td-underline-hvr:hover,.u-hvr:hover { text-decoration: underline; }
/*

  WHITE SPACE
  Docs: http://aircss.io/docs/typography/white-space.html

  Sometime it is necessary to set a different strategy to handle white spaces and new lines from the
  default one web browser use in an element.


  Mnemonics
  =========

  Bases:
    pre
    nowrap
    truncate

  Optional extensions:
    -m = medium width container
    -l = large width container

*/

/* generate: container-rule */
.pre { white-space: pre; }
.nowrap,.truncate { white-space: nowrap;
}
.truncate {
    overflow: hidden;
    text-overflow: ellipsis;
}
/* end generate */

@media (min-width: 32rem) {
  .pre-m { white-space: pre; }
  .nowrap-m,.truncate-m { white-space: nowrap;
  }
  .truncate-m {
  overflow: hidden;
  text-overflow: ellipsis;
  }
}

@media (min-width: 64rem) {
  .pre-l { white-space: pre; }
  .nowrap-l,.truncate-l { white-space: nowrap;
  }
  .truncate-l {
  overflow: hidden;
  text-overflow: ellipsis;
  }
}
/*

  FONT FAMILY
  Docs: http://aircss.io/docs/typography/font-family.html

  There are three defined classes that utilize attractive system fonts with appropriate fallbacks
  for setting the typeface of a page or element. It is suggested that you customize or extend this
  module to suit your own needs. However, relying on systems fonts greatly improves page performance
  and can also help your web application/site blend in with the user's operating system.


  Mnemonics
  =========

  Bases:
    code
    serif
    sans-serif

*/

.sans-serif {
  font-family: system-ui,
               -apple-system,
               Segoe UI,
               Roboto,
               Ubuntu,
               Cantarell,
               Noto Sans,
               sans-serif,
               BlinkMacSystemFont,
               "Segoe UI",
               Helvetica,
               Arial,
               sans-serif,
               "Apple Color Emoji",
               "Segoe UI Emoji",
               "Segoe UI Symbol";
}

.serif {
  font-family: georgia,
               times,
               serif;
}

code, .code {
  font-family: SFMono-Regular,
               Menlo,
               Monaco,
               Consolas,
               "Liberation Mono",
               "Courier New",
               monospace;
}

/*

  VERTICAL ALIGN

  Media Query Extensions:
    -m  = medium
    -l  = large

*/


/* generate: container-rule */
.overflow-visible { overflow: visible; }
.overflow-hidden { overflow: hidden; }
.overflow-scroll { overflow: scroll; }
.overflow-auto { overflow: auto; }
/* end generate */

@media (min-width: 32rem) {
  .overflow-visible-m { overflow: visible; }
  .overflow-hidden-m { overflow: hidden; }
  .overflow-scroll-m { overflow: scroll; }
  .overflow-auto-m { overflow: auto; }
}

@media (min-width: 64rem) {
  .overflow-visible-l { overflow: visible; }
  .overflow-hidden-l { overflow: hidden; }
  .overflow-scroll-l { overflow: scroll; }
  .overflow-auto-l { overflow: auto; }
}
/*

  CONTAINER
  Docs: http://aircss.io/docs/layout/container.html


*/


.container {
  container-type: inline-size;
}
/*

  DISPLAY
  Docs: http://aircss.io/docs/layout/display.html

  Formally, the display property sets an element's inner and outer display types. The outer type
  sets an element's participation in flow layout; the inner type sets the layout of children. Some
  values of display are fully defined in their own individual specifications; for example the detail
  of what happens when display: flex is declared is defined in the CSS Flexible Box Model
  specification.


  Mnemonics
  =========

  Bases:
    d = display

  Modifiers:
    n = none
    b = block
    i = inline
    ib = inline-block

  Optional extensions:
    -m = medium width container
    -l = large width container

*/

/* generate: container-rule */
.dn { display: none; }
.df { display: flex; }
.db { display: block; }
.di { display: inline; }
.dib { display: inline-block; }

.flex { display: flex; }
/* end generate */

@media (min-width: 32rem) {
  .dn-m { display: none; }
  .df-m { display: flex; }
  .db-m { display: block; }
  .di-m { display: inline; }
  .dib-m { display: inline-block; }
  
  .flex-m { display: flex; }
}

@media (min-width: 64rem) {
  .dn-l { display: none; }
  .df-l { display: flex; }
  .db-l { display: block; }
  .di-l { display: inline; }
  .dib-l { display: inline-block; }
  
  .flex-l { display: flex; }
}
/*

  FLEXBOX

  Docs: http://aircss.io/docs/layout/flex

  Base:
    flex

  Modifiers:
    -auto
    -grow
    -none

    -nowrap
    -column
    -row
    -wrap

*/


/* generate: container-rule */
.flex-row { flex-direction: row; }
.flex-column { flex-direction: column; }

.flex-none { flex: none; }
.flex-auto { flex: 1 1 auto; }
.flex-grow { flex-grow: 1; }

.flex-wrap { flex-wrap: wrap; }
.flex-stretch { align-items: stretch; }
/* end generate */


@media (min-width: 32rem) {
  .flex-row-m { flex-direction: row; }
  .flex-column-m { flex-direction: column; }
  
  .flex-none-m { flex: none; }
  .flex-auto-m { flex: 1 1 auto; }
  .flex-grow-m { flex-grow: 1; }
  
  .flex-wrap-m { flex-wrap: wrap; }
  .flex-stretch-m { align-items: stretch; }
}

@media (min-width: 64rem) {
  .flex-row-l { flex-direction: row; }
  .flex-column-l { flex-direction: column; }
  
  .flex-none-l { flex: none; }
  .flex-auto-l { flex: 1 1 auto; }
  .flex-grow-l { flex-grow: 1; }
  
  .flex-wrap-l { flex-wrap: wrap; }
  .flex-stretch-l { align-items: stretch; }
}

.order-0 { order: 0; }
.order-1 { order: 1; }
.order-2 { order: 2; }
.order-3 { order: 3; }
.order-4 { order: 4; }
.order-5 { order: 5; }
.order-999 { order: 999; }
.order-9999 { order: 9999; }
.order-max { order: 2147483647; }
/*

  ALIGN-CONTENT

  Media Query Extensions:
   -m  = medium
   -l  = large

*/


.content-start { align-content: flex-start; }
.content-center { align-content: center; }
.content-end { align-content: flex-end; }
.content-between { align-content: space-between; }
.content-around { align-content: space-around; }

.justify-start   { justify-content: flex-start; }
.justify-center  { justify-content: center; }
.justify-end     { justify-content: flex-end; }
.justify-between { justify-content: space-between; }
.justify-around  { justify-content: space-around; }

/*
 
  BOX SIZING

*/

html,
body,
div,
article,
section,
main,
footer,
header,
form,
fieldset,
legend,
pre,
code,
a,
h1,h2,h3,h4,h5,h6,
p,
ul,
ol,
li,
dl,
dt,
dd,
textarea,
table, 
td,
th,
tr,
input[type="email"],
input[type="number"],
input[type="password"],
input[type="tel"],
input[type="text"],
input[type="url"],
.border-box {
  box-sizing: border-box;
}
/*

  SPACING
  Docs: http://aircss.io/docs/layout/spacing/

  An eight step powers of two scale ranging from 0 to 16rem.

  Base:
    p = padding
    m = margin

  Modifiers:
    a = all
    v = vertical
    h = horizontal
    t = top
    r = right
    b = bottom
    l = left

    0 = none
    1 = 1st step in spacing scale
    2 = 2nd step in spacing scale
    3 = 3rd step in spacing scale
    4 = 4th step in spacing scale
    5 = 5th step in spacing scale
    6 = 6th step in spacing scale
    7 = 7th step in spacing scale
    8 = 8th step in spacing scale

*/

/* generate: container-rule */
.pa0 { padding: 0; }
.pa1 { padding: 0.125rem; }
.pa2 { padding: 0.25rem; }
.pa3 { padding: 0.5rem; }
.pa4 { padding: 1rem; }
.pa5 { padding: 2rem; }
.pa6 { padding: 4rem; }
.pa7 { padding: 8rem; }
.pa8 { padding: 16rem; }

.pl0 { padding-left: 0; }
.pl1 { padding-left: 0.125rem; }
.pl2 { padding-left: 0.25rem; }
.pl3 { padding-left: 0.5rem; }
.pl4 { padding-left: 1rem; }
.pl5 { padding-left: 2rem; }
.pl6 { padding-left: 4rem; }
.pl7 { padding-left: 8rem; }
.pl8 { padding-left: 16rem; }

.pr0 { padding-right: 0; }
.pr1 { padding-right: 0.125rem; }
.pr2 { padding-right: 0.25rem; }
.pr3 { padding-right: 0.5rem; }
.pr4 { padding-right: 1rem; }
.pr5 { padding-right: 2rem; }
.pr6 { padding-right: 4rem; }
.pr7 { padding-right: 8rem; }
.pr8 { padding-right: 16rem; }

.pb0 { padding-bottom: 0; }
.pb1 { padding-bottom: 0.125rem; }
.pb2 { padding-bottom: 0.25rem; }
.pb3 { padding-bottom: 0.5rem; }
.pb4 { padding-bottom: 1rem; }
.pb5 { padding-bottom: 2rem; }
.pb6 { padding-bottom: 4rem; }
.pb7 { padding-bottom: 8rem; }
.pb8 { padding-bottom: 16rem; }

.pt0 { padding-top: 0; }
.pt1 { padding-top: 0.125rem; }
.pt2 { padding-top: 0.25rem; }
.pt3 { padding-top: 0.5rem; }
.pt4 { padding-top: 1rem; }
.pt5 { padding-top: 2rem; }
.pt6 { padding-top: 4rem; }
.pt7 { padding-top: 8rem; }
.pt8 { padding-top: 16rem; }

.pv0 {
  padding-top: 0;
  padding-bottom: 0;
}
.pv1 {
  padding-top: 0.125rem;
  padding-bottom: 0.125rem;
}
.pv2 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}
.pv3 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}
.pv4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}
.pv5 {
  padding-top: 2rem;
  padding-bottom: 2rem;
}
.pv6 {
  padding-top: 4rem;
  padding-bottom: 4rem;
}
.pv7 {
  padding-top: 8rem;
  padding-bottom: 8rem;
}
.pv8 {
  padding-top: 16rem;
  padding-bottom: 16rem;
}

.ph0 {
  padding-left: 0;
  padding-right: 0;
}
.ph1,.ph2 {
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}
.ph3 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}
.ph4 {
  padding-left: 1rem;
  padding-right: 1rem;
}
.ph5 {
  padding-left: 2rem;
  padding-right: 2rem;
}
.ph6 {
  padding-left: 4rem;
  padding-right: 4rem;
}
.ph7 {
  padding-left: 8rem;
  padding-right: 8rem;
}
.ph8 {
  padding-left: 16rem;
  padding-right: 16rem;
}

.ma0 { margin: 0; }
.ma1 { margin: 0.125rem; }
.ma2 { margin: 0.25rem; }
.ma3 { margin: 0.5rem; }
.ma4 { margin: 1rem; }
.ma5 { margin: 2rem; }
.ma6 { margin: 4rem; }
.ma7 { margin: 8rem; }
.ma8 { margin: 16rem; }

.ml0 { margin-left: 0; }
.ml1 { margin-left: 0.125rem; }
.ml2 { margin-left: 0.25rem; }
.ml3 { margin-left: 0.5rem; }
.ml4 { margin-left: 1rem; }
.ml5 { margin-left: 2rem; }
.ml6 { margin-left: 4rem; }
.ml7 { margin-left: 8rem; }
.ml8 { margin-left: 16rem; }

.mr0 { margin-right: 0; }
.mr1 { margin-right: 0.125rem; }
.mr2 { margin-right: 0.25rem; }
.mr3 { margin-right: 0.5rem; }
.mr4 { margin-right: 1rem; }
.mr5 { margin-right: 2rem; }
.mr6 { margin-right: 4rem; }
.mr7 { margin-right: 8rem; }
.mr8 { margin-right: 16rem; }

.mb0 { margin-bottom: 0; }
.mb1,.mb2 { margin-bottom: 0.25rem; }
.mb3 { margin-bottom: 0.5rem; }
.mb4 { margin-bottom: 1rem; }
.mb5 { margin-bottom: 2rem; }
.mb6 { margin-bottom: 4rem; }
.mb7 { margin-bottom: 8rem; }
.mb8 { margin-bottom: 16rem; }

.mt0 { margin-top: 0; }
.mt1 { margin-top: 0.125rem; }
.mt2 { margin-top: 0.25rem; }
.mt3 { margin-top: 0.5rem; }
.mt4 { margin-top: 1rem; }
.mt5 { margin-top: 2rem; }
.mt6 { margin-top: 4rem; }
.mt7 { margin-top: 8rem; }
.mt8 { margin-top: 16rem; }

.mv0   {
  margin-top: 0;
  margin-bottom: 0;
}
.mv1,.mv2  {
  margin-top: 0.25rem;
  margin-bottom: 0.25rem;
}
.mv3   {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
}
.mv4   {
  margin-top: 1rem;
  margin-bottom: 1rem;
}
.mv5   {
  margin-top: 2rem;
  margin-bottom: 2rem;
}
.mv6   {
  margin-top: 4rem;
  margin-bottom: 4rem;
}
.mv7  {
  margin-top: 8rem;
  margin-bottom: 8rem;
}
.mv8  {
  margin-top: 16rem;
  margin-bottom: 16rem;
}

.mh0   {
  margin-left: 0;
  margin-right: 0;
}
.mh1   {
  margin-left: 0.125rem;
  margin-right: 0.125rem;
}
.mh2   {
  margin-left: 0.25rem;
  margin-right: 0.25rem;
}
.mh3   {
  margin-left: 0.5rem;
  margin-right: 0.5rem;
}
.mh4   {
  margin-left: 1rem;
  margin-right: 1rem;
}
.mh5   {
  margin-left: 2rem;
  margin-right: 2rem;
}
.mh6   {
  margin-left: 4rem;
  margin-right: 4rem;
}
.mh7  {
  margin-left: 8rem;
  margin-right: 8rem;
}
.mh8  {
  margin-left: 16rem;
  margin-right: 16rem;
}

.center {
  margin-right: auto;
  margin-left: auto;
}
/* end generate */

@media (min-width: 32rem) {
  .pa0-m { padding: 0; }
  .pa1-m { padding: 0.125rem; }
  .pa2-m { padding: 0.25rem; }
  .pa3-m { padding: 0.5rem; }
  .pa4-m { padding: 1rem; }
  .pa5-m { padding: 2rem; }
  .pa6-m { padding: 4rem; }
  .pa7-m { padding: 8rem; }
  .pa8-m { padding: 16rem; }
  
  .pl0-m { padding-left: 0; }
  .pl1-m { padding-left: 0.125rem; }
  .pl2-m { padding-left: 0.25rem; }
  .pl3-m { padding-left: 0.5rem; }
  .pl4-m { padding-left: 1rem; }
  .pl5-m { padding-left: 2rem; }
  .pl6-m { padding-left: 4rem; }
  .pl7-m { padding-left: 8rem; }
  .pl8-m { padding-left: 16rem; }
  
  .pr0-m { padding-right: 0; }
  .pr1-m { padding-right: 0.125rem; }
  .pr2-m { padding-right: 0.25rem; }
  .pr3-m { padding-right: 0.5rem; }
  .pr4-m { padding-right: 1rem; }
  .pr5-m { padding-right: 2rem; }
  .pr6-m { padding-right: 4rem; }
  .pr7-m { padding-right: 8rem; }
  .pr8-m { padding-right: 16rem; }
  
  .pb0-m { padding-bottom: 0; }
  .pb1-m { padding-bottom: 0.125rem; }
  .pb2-m { padding-bottom: 0.25rem; }
  .pb3-m { padding-bottom: 0.5rem; }
  .pb4-m { padding-bottom: 1rem; }
  .pb5-m { padding-bottom: 2rem; }
  .pb6-m { padding-bottom: 4rem; }
  .pb7-m { padding-bottom: 8rem; }
  .pb8-m { padding-bottom: 16rem; }
  
  .pt0-m { padding-top: 0; }
  .pt1-m { padding-top: 0.125rem; }
  .pt2-m { padding-top: 0.25rem; }
  .pt3-m { padding-top: 0.5rem; }
  .pt4-m { padding-top: 1rem; }
  .pt5-m { padding-top: 2rem; }
  .pt6-m { padding-top: 4rem; }
  .pt7-m { padding-top: 8rem; }
  .pt8-m { padding-top: 16rem; }
  
  .pv0-m {
  padding-top: 0;
  padding-bottom: 0;
  }
  .pv1-m {
  padding-top: 0.125rem;
  padding-bottom: 0.125rem;
  }
  .pv2-m {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
  }
  .pv3-m {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  }
  .pv4-m {
  padding-top: 1rem;
  padding-bottom: 1rem;
  }
  .pv5-m {
  padding-top: 2rem;
  padding-bottom: 2rem;
  }
  .pv6-m {
  padding-top: 4rem;
  padding-bottom: 4rem;
  }
  .pv7-m {
  padding-top: 8rem;
  padding-bottom: 8rem;
  }
  .pv8-m {
  padding-top: 16rem;
  padding-bottom: 16rem;
  }
  
  .ph0-m {
  padding-left: 0;
  padding-right: 0;
  }
  .ph1-m,.ph2-m {
  padding-left: 0.25rem;
  padding-right: 0.25rem;
  }
  .ph3-m {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  }
  .ph4-m {
  padding-left: 1rem;
  padding-right: 1rem;
  }
  .ph5-m {
  padding-left: 2rem;
  padding-right: 2rem;
  }
  .ph6-m {
  padding-left: 4rem;
  padding-right: 4rem;
  }
  .ph7-m {
  padding-left: 8rem;
  padding-right: 8rem;
  }
  .ph8-m {
  padding-left: 16rem;
  padding-right: 16rem;
  }
  
  .ma0-m { margin: 0; }
  .ma1-m { margin: 0.125rem; }
  .ma2-m { margin: 0.25rem; }
  .ma3-m { margin: 0.5rem; }
  .ma4-m { margin: 1rem; }
  .ma5-m { margin: 2rem; }
  .ma6-m { margin: 4rem; }
  .ma7-m { margin: 8rem; }
  .ma8-m { margin: 16rem; }
  
  .ml0-m { margin-left: 0; }
  .ml1-m { margin-left: 0.125rem; }
  .ml2-m { margin-left: 0.25rem; }
  .ml3-m { margin-left: 0.5rem; }
  .ml4-m { margin-left: 1rem; }
  .ml5-m { margin-left: 2rem; }
  .ml6-m { margin-left: 4rem; }
  .ml7-m { margin-left: 8rem; }
  .ml8-m { margin-left: 16rem; }
  
  .mr0-m { margin-right: 0; }
  .mr1-m { margin-right: 0.125rem; }
  .mr2-m { margin-right: 0.25rem; }
  .mr3-m { margin-right: 0.5rem; }
  .mr4-m { margin-right: 1rem; }
  .mr5-m { margin-right: 2rem; }
  .mr6-m { margin-right: 4rem; }
  .mr7-m { margin-right: 8rem; }
  .mr8-m { margin-right: 16rem; }
  
  .mb0-m { margin-bottom: 0; }
  .mb1-m,.mb2-m { margin-bottom: 0.25rem; }
  .mb3-m { margin-bottom: 0.5rem; }
  .mb4-m { margin-bottom: 1rem; }
  .mb5-m { margin-bottom: 2rem; }
  .mb6-m { margin-bottom: 4rem; }
  .mb7-m { margin-bottom: 8rem; }
  .mb8-m { margin-bottom: 16rem; }
  
  .mt0-m { margin-top: 0; }
  .mt1-m { margin-top: 0.125rem; }
  .mt2-m { margin-top: 0.25rem; }
  .mt3-m { margin-top: 0.5rem; }
  .mt4-m { margin-top: 1rem; }
  .mt5-m { margin-top: 2rem; }
  .mt6-m { margin-top: 4rem; }
  .mt7-m { margin-top: 8rem; }
  .mt8-m { margin-top: 16rem; }
  
  .mv0-m   {
  margin-top: 0;
  margin-bottom: 0;
  }
  .mv1-m,.mv2-m  {
  margin-top: 0.25rem;
  margin-bottom: 0.25rem;
  }
  .mv3-m   {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
  }
  .mv4-m   {
  margin-top: 1rem;
  margin-bottom: 1rem;
  }
  .mv5-m   {
  margin-top: 2rem;
  margin-bottom: 2rem;
  }
  .mv6-m   {
  margin-top: 4rem;
  margin-bottom: 4rem;
  }
  .mv7-m  {
  margin-top: 8rem;
  margin-bottom: 8rem;
  }
  .mv8-m  {
  margin-top: 16rem;
  margin-bottom: 16rem;
  }
  
  .mh0-m   {
  margin-left: 0;
  margin-right: 0;
  }
  .mh1-m   {
  margin-left: 0.125rem;
  margin-right: 0.125rem;
  }
  .mh2-m   {
  margin-left: 0.25rem;
  margin-right: 0.25rem;
  }
  .mh3-m   {
  margin-left: 0.5rem;
  margin-right: 0.5rem;
  }
  .mh4-m   {
  margin-left: 1rem;
  margin-right: 1rem;
  }
  .mh5-m   {
  margin-left: 2rem;
  margin-right: 2rem;
  }
  .mh6-m   {
  margin-left: 4rem;
  margin-right: 4rem;
  }
  .mh7-m  {
  margin-left: 8rem;
  margin-right: 8rem;
  }
  .mh8-m  {
  margin-left: 16rem;
  margin-right: 16rem;
  }
  
  .center-m {
  margin-right: auto;
  margin-left: auto;
  }
}

@media (min-width: 64rem) {
  .pa0-l { padding: 0; }
  .pa1-l { padding: 0.125rem; }
  .pa2-l { padding: 0.25rem; }
  .pa3-l { padding: 0.5rem; }
  .pa4-l { padding: 1rem; }
  .pa5-l { padding: 2rem; }
  .pa6-l { padding: 4rem; }
  .pa7-l { padding: 8rem; }
  .pa8-l { padding: 16rem; }
  
  .pl0-l { padding-left: 0; }
  .pl1-l { padding-left: 0.125rem; }
  .pl2-l { padding-left: 0.25rem; }
  .pl3-l { padding-left: 0.5rem; }
  .pl4-l { padding-left: 1rem; }
  .pl5-l { padding-left: 2rem; }
  .pl6-l { padding-left: 4rem; }
  .pl7-l { padding-left: 8rem; }
  .pl8-l { padding-left: 16rem; }
  
  .pr0-l { padding-right: 0; }
  .pr1-l { padding-right: 0.125rem; }
  .pr2-l { padding-right: 0.25rem; }
  .pr3-l { padding-right: 0.5rem; }
  .pr4-l { padding-right: 1rem; }
  .pr5-l { padding-right: 2rem; }
  .pr6-l { padding-right: 4rem; }
  .pr7-l { padding-right: 8rem; }
  .pr8-l { padding-right: 16rem; }
  
  .pb0-l { padding-bottom: 0; }
  .pb1-l { padding-bottom: 0.125rem; }
  .pb2-l { padding-bottom: 0.25rem; }
  .pb3-l { padding-bottom: 0.5rem; }
  .pb4-l { padding-bottom: 1rem; }
  .pb5-l { padding-bottom: 2rem; }
  .pb6-l { padding-bottom: 4rem; }
  .pb7-l { padding-bottom: 8rem; }
  .pb8-l { padding-bottom: 16rem; }
  
  .pt0-l { padding-top: 0; }
  .pt1-l { padding-top: 0.125rem; }
  .pt2-l { padding-top: 0.25rem; }
  .pt3-l { padding-top: 0.5rem; }
  .pt4-l { padding-top: 1rem; }
  .pt5-l { padding-top: 2rem; }
  .pt6-l { padding-top: 4rem; }
  .pt7-l { padding-top: 8rem; }
  .pt8-l { padding-top: 16rem; }
  
  .pv0-l {
  padding-top: 0;
  padding-bottom: 0;
  }
  .pv1-l {
  padding-top: 0.125rem;
  padding-bottom: 0.125rem;
  }
  .pv2-l {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
  }
  .pv3-l {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  }
  .pv4-l {
  padding-top: 1rem;
  padding-bottom: 1rem;
  }
  .pv5-l {
  padding-top: 2rem;
  padding-bottom: 2rem;
  }
  .pv6-l {
  padding-top: 4rem;
  padding-bottom: 4rem;
  }
  .pv7-l {
  padding-top: 8rem;
  padding-bottom: 8rem;
  }
  .pv8-l {
  padding-top: 16rem;
  padding-bottom: 16rem;
  }
  
  .ph0-l {
  padding-left: 0;
  padding-right: 0;
  }
  .ph1-l,.ph2-l {
  padding-left: 0.25rem;
  padding-right: 0.25rem;
  }
  .ph3-l {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
  }
  .ph4-l {
  padding-left: 1rem;
  padding-right: 1rem;
  }
  .ph5-l {
  padding-left: 2rem;
  padding-right: 2rem;
  }
  .ph6-l {
  padding-left: 4rem;
  padding-right: 4rem;
  }
  .ph7-l {
  padding-left: 8rem;
  padding-right: 8rem;
  }
  .ph8-l {
  padding-left: 16rem;
  padding-right: 16rem;
  }
  
  .ma0-l { margin: 0; }
  .ma1-l { margin: 0.125rem; }
  .ma2-l { margin: 0.25rem; }
  .ma3-l { margin: 0.5rem; }
  .ma4-l { margin: 1rem; }
  .ma5-l { margin: 2rem; }
  .ma6-l { margin: 4rem; }
  .ma7-l { margin: 8rem; }
  .ma8-l { margin: 16rem; }
  
  .ml0-l { margin-left: 0; }
  .ml1-l { margin-left: 0.125rem; }
  .ml2-l { margin-left: 0.25rem; }
  .ml3-l { margin-left: 0.5rem; }
  .ml4-l { margin-left: 1rem; }
  .ml5-l { margin-left: 2rem; }
  .ml6-l { margin-left: 4rem; }
  .ml7-l { margin-left: 8rem; }
  .ml8-l { margin-left: 16rem; }
  
  .mr0-l { margin-right: 0; }
  .mr1-l { margin-right: 0.125rem; }
  .mr2-l { margin-right: 0.25rem; }
  .mr3-l { margin-right: 0.5rem; }
  .mr4-l { margin-right: 1rem; }
  .mr5-l { margin-right: 2rem; }
  .mr6-l { margin-right: 4rem; }
  .mr7-l { margin-right: 8rem; }
  .mr8-l { margin-right: 16rem; }
  
  .mb0-l { margin-bottom: 0; }
  .mb1-l,.mb2-l { margin-bottom: 0.25rem; }
  .mb3-l { margin-bottom: 0.5rem; }
  .mb4-l { margin-bottom: 1rem; }
  .mb5-l { margin-bottom: 2rem; }
  .mb6-l { margin-bottom: 4rem; }
  .mb7-l { margin-bottom: 8rem; }
  .mb8-l { margin-bottom: 16rem; }
  
  .mt0-l { margin-top: 0; }
  .mt1-l { margin-top: 0.125rem; }
  .mt2-l { margin-top: 0.25rem; }
  .mt3-l { margin-top: 0.5rem; }
  .mt4-l { margin-top: 1rem; }
  .mt5-l { margin-top: 2rem; }
  .mt6-l { margin-top: 4rem; }
  .mt7-l { margin-top: 8rem; }
  .mt8-l { margin-top: 16rem; }
  
  .mv0-l   {
  margin-top: 0;
  margin-bottom: 0;
  }
  .mv1-l,.mv2-l  {
  margin-top: 0.25rem;
  margin-bottom: 0.25rem;
  }
  .mv3-l   {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
  }
  .mv4-l   {
  margin-top: 1rem;
  margin-bottom: 1rem;
  }
  .mv5-l   {
  margin-top: 2rem;
  margin-bottom: 2rem;
  }
  .mv6-l   {
  margin-top: 4rem;
  margin-bottom: 4rem;
  }
  .mv7-l  {
  margin-top: 8rem;
  margin-bottom: 8rem;
  }
  .mv8-l  {
  margin-top: 16rem;
  margin-bottom: 16rem;
  }
  
  .mh0-l   {
  margin-left: 0;
  margin-right: 0;
  }
  .mh1-l   {
  margin-left: 0.125rem;
  margin-right: 0.125rem;
  }
  .mh2-l   {
  margin-left: 0.25rem;
  margin-right: 0.25rem;
  }
  .mh3-l   {
  margin-left: 0.5rem;
  margin-right: 0.5rem;
  }
  .mh4-l   {
  margin-left: 1rem;
  margin-right: 1rem;
  }
  .mh5-l   {
  margin-left: 2rem;
  margin-right: 2rem;
  }
  .mh6-l   {
  margin-left: 4rem;
  margin-right: 4rem;
  }
  .mh7-l  {
  margin-left: 8rem;
  margin-right: 8rem;
  }
  .mh8-l  {
  margin-left: 16rem;
  margin-right: 16rem;
  }
  
  .center-l {
  margin-right: auto;
  margin-left: auto;
  }
}

/*

   FLOATS
   http://aircss.io/docs/layout/floats/

   1. Floated elements are automatically rendered as block level elements.
   2. Don't forget to clearfix your floats with .cf

   Base:
     f = float

   Modifiers:
     l = left
     r = right
     n = none

   Media Query Extensions:
     -m  = medium
     -l  = large

*/

/* generate: container-rule */
.fl { float: left; }
.fr { float: right; }
.fn { float: none; }
/* end generate */

@media (min-width: 32rem) {
  .fl-m { float: left; }
  .fr-m { float: right; }
  .fn-m { float: none; }
}

@media (min-width: 64rem) {
  .fl-l { float: left; }
  .fr-l { float: right; }
  .fn-l { float: none; }
}
/*

   CLEARS

*/

/* Nicolas Gallaghers Clearfix solution
   Ref: http://nicolasgallagher.com/micro-clearfix-hack/ */

.cf:before,
.cf:after   { content: " "; display: table; }
.cf:after   { clear: both; }
.cf         { *zoom: 1; }
/*

   WIDTHS
   Docs: http://aircss.io/docs/layout/widths/

   Base:
     w = width

   Modifiers
     1 = 1st step in width scale
     2 = 2nd step in width scale
     3 = 3rd step in width scale
     4 = 4th step in width scale
     5 = 5th step in width scale
     6 = 6th step in width scale
     7 = 7th step in width scale
     8 = 8th step in width scale

     -10  = literal value 10%
     -20  = literal value 20%
     -25  = literal value 25%
     -30  = literal value 30%
     -40  = literal value 40%
     -50  = literal value 50%
     -60  = literal value 60%
     -70  = literal value 70%
     -75  = literal value 75%
     -80  = literal value 80%
     -90  = literal value 90%
     -100 = literal value 100%

     -third      = 100% / 3
     -two-thirds = 100% / 1.5
     -auto       = string value auto

*/

/* generate: container-rule */
.w1 { width: 1rem; }
.w2 { width: 2rem; }
.w3 { width: 4rem; }
.w4 { width: 8rem; }
.w5 { width: 16rem; }
.w6 { width: 32rem; }
.w7 { width: 48rem; }
.w8 { width: 64rem; }

.w-10 { width:  10%; }
.w-20 { width:  20%; }
.w-25 { width:  25%; }
.w-30 { width:  30%; }
.w-40 { width:  40%; }
.w-50 { width:  50%; }
.w-60 { width:  60%; }
.w-70 { width:  70%; }
.w-75 { width:  75%; }
.w-80 { width:  80%; }
.w-90 { width:  90%; }
.w-100 { width: 100%; }

.w-third { width: calc(100% / 3); }
.w-two-thirds { width: calc(100% / 1.5); }

.w-auto { width: auto; }
/* end generate */

@media (min-width: 32rem) {
  .w1-m { width: 1rem; }
  .w2-m { width: 2rem; }
  .w3-m { width: 4rem; }
  .w4-m { width: 8rem; }
  .w5-m { width: 16rem; }
  .w6-m { width: 32rem; }
  .w7-m { width: 48rem; }
  .w8-m { width: 64rem; }
  
  .w-10-m { width:  10%; }
  .w-20-m { width:  20%; }
  .w-25-m { width:  25%; }
  .w-30-m { width:  30%; }
  .w-40-m { width:  40%; }
  .w-50-m { width:  50%; }
  .w-60-m { width:  60%; }
  .w-70-m { width:  70%; }
  .w-75-m { width:  75%; }
  .w-80-m { width:  80%; }
  .w-90-m { width:  90%; }
  .w-100-m { width: 100%; }
  
  .w-third-m { width: calc(100% / 3); }
  .w-two-thirds-m { width: calc(100% / 1.5); }
  
  .w-auto-m { width: auto; }
}

@media (min-width: 64rem) {
  .w1-l { width: 1rem; }
  .w2-l { width: 2rem; }
  .w3-l { width: 4rem; }
  .w4-l { width: 8rem; }
  .w5-l { width: 16rem; }
  .w6-l { width: 32rem; }
  .w7-l { width: 48rem; }
  .w8-l { width: 64rem; }
  
  .w-10-l { width:  10%; }
  .w-20-l { width:  20%; }
  .w-25-l { width:  25%; }
  .w-30-l { width:  30%; }
  .w-40-l { width:  40%; }
  .w-50-l { width:  50%; }
  .w-60-l { width:  60%; }
  .w-70-l { width:  70%; }
  .w-75-l { width:  75%; }
  .w-80-l { width:  80%; }
  .w-90-l { width:  90%; }
  .w-100-l { width: 100%; }
  
  .w-third-l { width: calc(100% / 3); }
  .w-two-thirds-l { width: calc(100% / 1.5); }
  
  .w-auto-l { width: auto; }
}
/*

   MAX WIDTHS
   Docs: http://aircss.io/docs/layout/max-widths/

   Base:
     mw = max-width

   Modifiers
     1 = 1st step in width scale
     2 = 2nd step in width scale
     3 = 3rd step in width scale
     4 = 4th step in width scale
     5 = 5th step in width scale
     6 = 6st step in width scale
     7 = 7nd step in width scale
     8 = 8rd step in width scale

     -100 = literal value 100%

     -none  = string value none


   Media Query Extensions:
     -m  = medium
     -l  = large

*/

/* generate: container-rule */
.mw1  {  max-width: 1rem; }
.mw2  {  max-width: 2rem; }
.mw3  {  max-width: 4rem; }
.mw4  {  max-width: 8rem; }
.mw5  {  max-width: 16rem; }
.mw6  {  max-width: 32rem; }
.mw7  {  max-width: 48rem; }
.mw8  {  max-width: 64rem; }
.mw9  {  max-width: 80rem; }

.mw-100  { max-width: 100%; }
/* end generate */


@media (min-width: 32rem) {
  .mw1-m  {  max-width: 1rem; }
  .mw2-m  {  max-width: 2rem; }
  .mw3-m  {  max-width: 4rem; }
  .mw4-m  {  max-width: 8rem; }
  .mw5-m  {  max-width: 16rem; }
  .mw6-m  {  max-width: 32rem; }
  .mw7-m  {  max-width: 48rem; }
  .mw8-m  {  max-width: 64rem; }
  .mw9-m  {  max-width: 80rem; }
  
  .mw-100-m  { max-width: 100%; }
}

@media (min-width: 64rem) {
  .mw1-l  {  max-width: 1rem; }
  .mw2-l  {  max-width: 2rem; }
  .mw3-l  {  max-width: 4rem; }
  .mw4-l  {  max-width: 8rem; }
  .mw5-l  {  max-width: 16rem; }
  .mw6-l  {  max-width: 32rem; }
  .mw7-l  {  max-width: 48rem; }
  .mw8-l  {  max-width: 64rem; }
  .mw9-l  {  max-width: 80rem; }
  
  .mw-100-l  { max-width: 100%; }
}
/*

   HEIGHTS
   Docs: http://aircss.io/docs/layout/heights/

   Base:
     h = height
     min-h = min-height
     min-vh = min-height vertical screen height
     vh = vertical screen height

   Modifiers
     1 = 1st step in height scale
     2 = 2nd step in height scale
     3 = 3rd step in height scale
     4 = 4th step in height scale
     5 = 5th step in height scale

     -25   = literal value 25%
     -50   = literal value 50%
     -75   = literal value 75%
     -100  = literal value 100%

     -auto = string value of auto
     -inherit = string value of inherit

   Media Query Extensions:
     -ns = not-small
     -m  = medium
     -l  = large

*/


/* generate: container-rule */
.h1 { height: 1rem; }
.h2 { height: 2rem; }
.h3 { height: 4rem; }
.h4 { height: 8rem; }
.h5 { height: 16rem; }
.h6 { height: 32rem; }
.h7 { height: 48rem; }
.h8 { height: 64rem; }

.h-25 { height:  25%; }
.h-50 { height:  50%; }
.h-75 { height:  75%; }
.h-100 { height: 100%; }

.h-vp { height: 100vh; }
.h-auto { height: auto; }
.h-inherit { height: inherit; }
/* end generate */


@media (min-width: 32rem) {
  .h1-m { height: 1rem; }
  .h2-m { height: 2rem; }
  .h3-m { height: 4rem; }
  .h4-m { height: 8rem; }
  .h5-m { height: 16rem; }
  .h6-m { height: 32rem; }
  .h7-m { height: 48rem; }
  .h8-m { height: 64rem; }
  
  .h-25-m { height:  25%; }
  .h-50-m { height:  50%; }
  .h-75-m { height:  75%; }
  .h-100-m { height: 100%; }
  
  .h-vp-m { height: 100vh; }
  .h-auto-m { height: auto; }
  .h-inherit-m { height: inherit; }
}

@media (min-width: 64rem) {
  .h1-l { height: 1rem; }
  .h2-l { height: 2rem; }
  .h3-l { height: 4rem; }
  .h4-l { height: 8rem; }
  .h5-l { height: 16rem; }
  .h6-l { height: 32rem; }
  .h7-l { height: 48rem; }
  .h8-l { height: 64rem; }
  
  .h-25-l { height:  25%; }
  .h-50-l { height:  50%; }
  .h-75-l { height:  75%; }
  .h-100-l { height: 100%; }
  
  .h-vp-l { height: 100vh; }
  .h-auto-l { height: auto; }
  .h-inherit-l { height: inherit; }
}
/*

   POSITIONING
   Docs: http://aircss.io/docs/layout/position/

   Media Query Extensions:
     -m  = medium
     -l  = large

*/

/* generate: container-rule */
.relative { position: relative; }
.absolute { position: absolute; }
.fixed { position: fixed; }
.sticky { position: sticky; }
/* end generate */

@media (min-width: 32rem) {
  .relative-m { position: relative; }
  .absolute-m { position: absolute; }
  .fixed-m { position: fixed; }
  .sticky-m { position: sticky; }
}

@media (min-width: 64rem) {
  .relative-l { position: relative; }
  .absolute-l { position: absolute; }
  .fixed-l { position: fixed; }
  .sticky-l { position: sticky; }
}
/*

   COORDINATES

   Use in combination with the position module.

*/

/* generate: container-rule */
.top { align-self: flex-start; top: 0; }
.right { justify-self: flex-end; right: 0; }
.bottom { align-self: flex-end; bottom: 0; }
.left { justify-self: flex-start; left: 0; }

.flex-column>.top { justify-self: flex-start; align-self: normal;}
.flex-column>.bottom { justify-self: flex-end; align-self: normal; }
.flex-column>.right { align-self: flex-end; justify-self: normal; }
.flex-column>.left { align-self: flex-start; justify-self: normal; }
/* end generate */

@media (min-width: 32rem) {
  .top-m { align-self: flex-start; top: 0; }
  .right-m { justify-self: flex-end; right: 0; }
  .bottom-m { align-self: flex-end; bottom: 0; }
  .left-m { justify-self: flex-start; left: 0; }
  
  .flex-column>.top-m { justify-self: flex-start; align-self: normal;}
  .flex-column>.bottom-m { justify-self: flex-end; align-self: normal; }
  .flex-column>.right-m { align-self: flex-end; justify-self: normal; }
  .flex-column>.left-m { align-self: flex-start; justify-self: normal; }
}

@media (min-width: 64rem) {
  .top-l { align-self: flex-start; top: 0; }
  .right-l { justify-self: flex-end; right: 0; }
  .bottom-l { align-self: flex-end; bottom: 0; }
  .left-l { justify-self: flex-start; left: 0; }
  
  .flex-column>.top-l { justify-self: flex-start; align-self: normal;}
  .flex-column>.bottom-l { justify-self: flex-end; align-self: normal; }
  .flex-column>.right-l { align-self: flex-end; justify-self: normal; }
  .flex-column>.left-l { align-self: flex-start; justify-self: normal; }
}
/*

  VERTICAL ALIGN

  Media Query Extensions:
    -m  = medium
    -l  = large

*/

/* generate: container-rule */
.v-base     { vertical-align: baseline; }
.v-mid      { vertical-align: middle; align-self: center;}
.v-top      { vertical-align: top; }
.v-btm      { vertical-align: bottom; }
/* end generate */


@media (min-width: 32rem) {
  .v-base-m     { vertical-align: baseline; }
  .v-mid-m      { vertical-align: middle; align-self: center;}
  .v-top-m      { vertical-align: top; }
  .v-btm-m      { vertical-align: bottom; }
}

@media (min-width: 64rem) {
  .v-base-l     { vertical-align: baseline; }
  .v-mid-l      { vertical-align: middle; align-self: center;}
  .v-top-l      { vertical-align: top; }
  .v-btm-l      { vertical-align: bottom; }
}
/*

  Z-INDEX

  Base
    z = z-index

  Modifiers
    0 = literal value 0
    1 = literal value 1
    2 = literal value 2
    3 = literal value 3
    4 = literal value 4
    5 = literal value 5
    999 = literal value 999
    9999 = literal value 9999

    -max = largest accepted z-index value as integer

    -inherit = string value inherit
    -initial = string value initial
    -unset = string value unset

  MDN: https://developer.mozilla.org/en/docs/Web/CSS/z-index
  Spec: http://www.w3.org/TR/CSS2/zindex.html
  Articles:
    https://philipwalton.com/articles/what-no-one-told-you-about-z-index/

  Tips on extending:
  There might be a time worth using negative z-index values.
  Or if you are using aircss with another project, you might need to
  adjust these values to suit your needs.

*/

.z0 { z-index: 0; }
.z1 { z-index: 1; }
.z2 { z-index: 2; }
.z3 { z-index: 3; }
.z4 { z-index: 4; }
.z5 { z-index: 5; }
.z999 { z-index: 999; }
.z9999 { z-index: 9999; }

.z-max { z-index: 2147483647; }

.z-inherit { z-index: inherit; }
.z-initial { z-index: initial; }
.z-unset { z-index: unset; }
.animate { transition: all .25s ease-in-out; }
/*

    BORDERS
    Docs: http://aircss.io/docs/themes/borders/

    Base:
      b = border

    Modifiers:
      a = all
      t = top
      r = right
      b = bottom
      l = left
      n = none

*/

/* generate: hover-rule */
.ba { border-style: solid; border-width: 1px; }
.bt { border-top-style: solid; border-top-width: 1px; }
.br { border-right-style: solid; border-right-width: 1px; }
.bb { border-bottom-style: solid; border-bottom-width: 1px; }
.bl { border-left-style: solid; border-left-width: 1px; }
.bn { border-style: none; border-width: 0; }
/* end generate */


.ba-hvr:hover { border-style: solid; border-width: 1px; }
.bt-hvr:hover { border-top-style: solid; border-top-width: 1px; }
.br-hvr:hover { border-right-style: solid; border-right-width: 1px; }
.bb-hvr:hover { border-bottom-style: solid; border-bottom-width: 1px; }
.bl-hvr:hover { border-left-style: solid; border-left-width: 1px; }
.bn-hvr:hover { border-style: none; border-width: 0; }
/*

  BORDER COLORS
  Docs: http://aircss.io/docs/themes/borders/

  Base:
    b = border

  Modifiers:
  --color-name = each color variable name is also a border color name

*/


/*
  generated content
*/

.b--blue { border-color: #000091; }
.b--white { border-color: #fff; }
.b--red { border-color: #e1000f; }
.b--noir { border-color: #000; }
.b--noir-90 { border-color: #111; }
.b--noir-80 { border-color: #333; }
.b--noir-70 { border-color: #555; }
.b--noir-60 { border-color: #777; }
.b--noir-50 { border-color: #999; }
.b--noir-40 { border-color: #aaa; }
.b--noir-30 { border-color: #ccc; }
.b--noir-20 { border-color: #eee; }
.b--noir-10 { border-color: #f4f4f4; }
.b--tuile { border-color: #ad4847; }
.b--tuile-80 { border-color: #ce614a; }
.b--tuile-60 { border-color: #ff9575; }
.b--tuile-40 { border-color: #ffc9b9; }
.b--tuile-20 { border-color: #ffe9e3; }
.b--glycine { border-color: #6e445a; }
.b--glycine-80 { border-color: #a558a0; }
.b--glycine-60 { border-color: #ce70cc; }
.b--glycine-40 { border-color: #e6b7e5; }
.b--glycine-20 { border-color: #f5e2f4; }
.b--ecume { border-color: #2f4077; }
.b--ecume-80 { border-color: #465f9d; }
.b--ecume-60 { border-color: #869ece; }
.b--ecume-40 { border-color: #c2cee6; }
.b--ecume-20 { border-color: #e6ebf5; }
.b--emeraude { border-color: #2b7758; }
.b--emeraude-80 { border-color: #00a95f; }
.b--emeraude-60 { border-color: #34cb6a; }
.b--emeraude-40 { border-color: #99e4b4; }
.b--emeraude-20 { border-color: #d6f4e1; }
.b--moutarde { border-color: #695240; }
.b--moutarde-80 { border-color: #c3992a; }
.b--moutarde-60 { border-color: #ffca00; }
.b--moutarde-40 { border-color: #ffe47f; }
.b--moutarde-20 { border-color: #fff4cc; }

/*
  end of generated content
*/
/*

  BORDER RADIUS
  
  Docs: http://aircss.io/docs/themes/border-radius/
  
  Base:
    br   = border-radius
  
  Modifiers:
    0    = 0/none
    1    = 1st step in scale
    2    = 2nd step in scale
    3    = 3rd step in scale
    4    = 4th step in scale
  
  Literal values:
    -100 = 100%
  
  Media Query Extensions:
    -m  = medium
    -l  = large

*/

.br0 { border-radius: 0; }
.br1 { border-radius: .125rem; }
.br2 { border-radius: .25rem; }
.br3 { border-radius: .5rem; }
.br4 { border-radius: 1rem; }
.br-100 { border-radius: 100%; }
/*

   BORDER STYLES
   Docs: http://aircss.io/docs/themes/borders/

   Depends on base border module in _borders.css

   Base:
     b = border-style

   Modifiers:
     --none   = none
     --dotted = dotted
     --dashed = dashed
     --solid  = solid

   Media Query Extensions:
     -ns = not-small
     -m  = medium
     -l  = large

 */

.b-dotted { border-style: dotted; }
.b-dashed { border-style: dashed; }
.b-solid {  border-style: solid; }
.b-none {   border-style: none; }
/*

   BORDER WIDTHS
   Docs: http://aircss.io/docs/themes/borders/

   Base:
     bw = border-width

   Modifiers:
     0 = 0 width border
     1 = 1st step in border-width scale
     2 = 2nd step in border-width scale
     3 = 3rd step in border-width scale
     4 = 4th step in border-width scale
     5 = 5th step in border-width scale

   Media Query Extensions:
     -m  = medium
     -l  = large

*/

.bw0 { border-width: 0; }
.bw1 { border-width: .125rem; }
.bw2 { border-width: .25rem; }
.bw3 { border-width: .5rem; }
.bw4 { border-width: 1rem; }
.bw5 { border-width: 2rem; }

/* Resets */
.bt-0 { border-top-width: 0; }
.br-0 { border-right-width: 0; }
.bb-0 { border-bottom-width: 0; }
.bl-0 { border-left-width: 0; }
/*

  SKINS
  Docs: http://aircss.io/docs/themes/skins/

  Classes for setting foreground and background colors on elements.
  If you haven't declared a border color, but set border on an element, it will
  be set to the current text color.

*/

/* generate: hover-rule */
/*
  generated content
*/

.blue { color: #000091; }
.white { color: #fff; }
.red { color: #e1000f; }
.noir { color: #000; }
.noir-90 { color: #111; }
.noir-80 { color: #333; }
.noir-70 { color: #555; }
.noir-60 { color: #777; }
.noir-50 { color: #999; }
.noir-40 { color: #aaa; }
.noir-30 { color: #ccc; }
.noir-20 { color: #eee; }
.noir-10 { color: #f4f4f4; }
.tuile { color: #ad4847; }
.tuile-80 { color: #ce614a; }
.tuile-60 { color: #ff9575; }
.tuile-40 { color: #ffc9b9; }
.tuile-20 { color: #ffe9e3; }
.glycine { color: #6e445a; }
.glycine-80 { color: #a558a0; }
.glycine-60 { color: #ce70cc; }
.glycine-40 { color: #e6b7e5; }
.glycine-20 { color: #f5e2f4; }
.ecume { color: #2f4077; }
.ecume-80 { color: #465f9d; }
.ecume-60 { color: #869ece; }
.ecume-40 { color: #c2cee6; }
.ecume-20 { color: #e6ebf5; }
.emeraude { color: #2b7758; }
.emeraude-80 { color: #00a95f; }
.emeraude-60 { color: #34cb6a; }
.emeraude-40 { color: #99e4b4; }
.emeraude-20 { color: #d6f4e1; }
.moutarde { color: #695240; }
.moutarde-80 { color: #c3992a; }
.moutarde-60 { color: #ffca00; }
.moutarde-40 { color: #ffe47f; }
.moutarde-20 { color: #fff4cc; }

/*
*/

.bg--blue { background-color: #000091; }
.bg--white { background-color: #fff; }
.bg--red { background-color: #e1000f; }
.bg--noir { background-color: #000; }
.bg--noir-90 { background-color: #111; }
.bg--noir-80 { background-color: #333; }
.bg--noir-70 { background-color: #555; }
.bg--noir-60 { background-color: #777; }
.bg--noir-50 { background-color: #999; }
.bg--noir-40 { background-color: #aaa; }
.bg--noir-30 { background-color: #ccc; }
.bg--noir-20 { background-color: #eee; }
.bg--noir-10 { background-color: #f4f4f4; }
.bg--tuile { background-color: #ad4847; }
.bg--tuile-80 { background-color: #ce614a; }
.bg--tuile-60 { background-color: #ff9575; }
.bg--tuile-40 { background-color: #ffc9b9; }
.bg--tuile-20 { background-color: #ffe9e3; }
.bg--glycine { background-color: #6e445a; }
.bg--glycine-80 { background-color: #a558a0; }
.bg--glycine-60 { background-color: #ce70cc; }
.bg--glycine-40 { background-color: #e6b7e5; }
.bg--glycine-20 { background-color: #f5e2f4; }
.bg--ecume { background-color: #2f4077; }
.bg--ecume-80 { background-color: #465f9d; }
.bg--ecume-60 { background-color: #869ece; }
.bg--ecume-40 { background-color: #c2cee6; }
.bg--ecume-20 { background-color: #e6ebf5; }
.bg--emeraude { background-color: #2b7758; }
.bg--emeraude-80 { background-color: #00a95f; }
.bg--emeraude-60 { background-color: #34cb6a; }
.bg--emeraude-40 { background-color: #99e4b4; }
.bg--emeraude-20 { background-color: #d6f4e1; }
.bg--moutarde { background-color: #695240; }
.bg--moutarde-80 { background-color: #c3992a; }
.bg--moutarde-60 { background-color: #ffca00; }
.bg--moutarde-40 { background-color: #ffe47f; }
.bg--moutarde-20 { background-color: #fff4cc; }

/*
  end of generated content
*/

.bg--transparent { background-color: transparent; }
/* end generate */


/*
generated content
*/

.blue-hvr:hover { color: #000091; }
.white-hvr:hover { color: #fff; }
.red-hvr:hover { color: #e1000f; }
.noir-hvr:hover { color: #000; }
.noir-90-hvr:hover { color: #111; }
.noir-80-hvr:hover { color: #333; }
.noir-70-hvr:hover { color: #555; }
.noir-60-hvr:hover { color: #777; }
.noir-50-hvr:hover { color: #999; }
.noir-40-hvr:hover { color: #aaa; }
.noir-30-hvr:hover { color: #ccc; }
.noir-20-hvr:hover { color: #eee; }
.noir-10-hvr:hover { color: #f4f4f4; }
.tuile-hvr:hover { color: #ad4847; }
.tuile-80-hvr:hover { color: #ce614a; }
.tuile-60-hvr:hover { color: #ff9575; }
.tuile-40-hvr:hover { color: #ffc9b9; }
.tuile-20-hvr:hover { color: #ffe9e3; }
.glycine-hvr:hover { color: #6e445a; }
.glycine-80-hvr:hover { color: #a558a0; }
.glycine-60-hvr:hover { color: #ce70cc; }
.glycine-40-hvr:hover { color: #e6b7e5; }
.glycine-20-hvr:hover { color: #f5e2f4; }
.ecume-hvr:hover { color: #2f4077; }
.ecume-80-hvr:hover { color: #465f9d; }
.ecume-60-hvr:hover { color: #869ece; }
.ecume-40-hvr:hover { color: #c2cee6; }
.ecume-20-hvr:hover { color: #e6ebf5; }
.emeraude-hvr:hover { color: #2b7758; }
.emeraude-80-hvr:hover { color: #00a95f; }
.emeraude-60-hvr:hover { color: #34cb6a; }
.emeraude-40-hvr:hover { color: #99e4b4; }
.emeraude-20-hvr:hover { color: #d6f4e1; }
.moutarde-hvr:hover { color: #695240; }
.moutarde-80-hvr:hover { color: #c3992a; }
.moutarde-60-hvr:hover { color: #ffca00; }
.moutarde-40-hvr:hover { color: #ffe47f; }
.moutarde-20-hvr:hover { color: #fff4cc; }

/*
*/

.bg--blue-hvr:hover { background-color: #000091; }
.bg--white-hvr:hover { background-color: #fff; }
.bg--red-hvr:hover { background-color: #e1000f; }
.bg--noir-hvr:hover { background-color: #000; }
.bg--noir-90-hvr:hover { background-color: #111; }
.bg--noir-80-hvr:hover { background-color: #333; }
.bg--noir-70-hvr:hover { background-color: #555; }
.bg--noir-60-hvr:hover { background-color: #777; }
.bg--noir-50-hvr:hover { background-color: #999; }
.bg--noir-40-hvr:hover { background-color: #aaa; }
.bg--noir-30-hvr:hover { background-color: #ccc; }
.bg--noir-20-hvr:hover { background-color: #eee; }
.bg--noir-10-hvr:hover { background-color: #f4f4f4; }
.bg--tuile-hvr:hover { background-color: #ad4847; }
.bg--tuile-80-hvr:hover { background-color: #ce614a; }
.bg--tuile-60-hvr:hover { background-color: #ff9575; }
.bg--tuile-40-hvr:hover { background-color: #ffc9b9; }
.bg--tuile-20-hvr:hover { background-color: #ffe9e3; }
.bg--glycine-hvr:hover { background-color: #6e445a; }
.bg--glycine-80-hvr:hover { background-color: #a558a0; }
.bg--glycine-60-hvr:hover { background-color: #ce70cc; }
.bg--glycine-40-hvr:hover { background-color: #e6b7e5; }
.bg--glycine-20-hvr:hover { background-color: #f5e2f4; }
.bg--ecume-hvr:hover { background-color: #2f4077; }
.bg--ecume-80-hvr:hover { background-color: #465f9d; }
.bg--ecume-60-hvr:hover { background-color: #869ece; }
.bg--ecume-40-hvr:hover { background-color: #c2cee6; }
.bg--ecume-20-hvr:hover { background-color: #e6ebf5; }
.bg--emeraude-hvr:hover { background-color: #2b7758; }
.bg--emeraude-80-hvr:hover { background-color: #00a95f; }
.bg--emeraude-60-hvr:hover { background-color: #34cb6a; }
.bg--emeraude-40-hvr:hover { background-color: #99e4b4; }
.bg--emeraude-20-hvr:hover { background-color: #d6f4e1; }
.bg--moutarde-hvr:hover { background-color: #695240; }
.bg--moutarde-80-hvr:hover { background-color: #c3992a; }
.bg--moutarde-60-hvr:hover { background-color: #ffca00; }
.bg--moutarde-40-hvr:hover { background-color: #ffe47f; }
.bg--moutarde-20-hvr:hover { background-color: #fff4cc; }

/*
end of generated content
*/

.bg--transparent-hvr:hover { background-color: transparent; }
/*

  OPACITY
  Docs: http://aircss.io/docs/themes/opacity/

*/


/* generate: hover-rule */
.o-100 { opacity: 1; }
.o-75 { opacity: .75; }
.o-50 { opacity: .5; }
.o-25 { opacity: .25; }
.o-0 { opacity: 0; }
/* end generate */

.o-100-hvr:hover { opacity: 1; }
.o-75-hvr:hover { opacity: .75; }
.o-50-hvr:hover { opacity: .5; }
.o-25-hvr:hover { opacity: .25; }
.o-0-hvr:hover { opacity: 0; }
/* generate: hover-rule */
.shadow,.shadow-out { box-shadow: 4px 4px 8px 0 rgba( 0, 0, 0, 0.2 ); }
.shadow-in { box-shadow: inset 4px 4px 8px 0 rgba( 0, 0, 0, 0.2 ); }
/* end generate */
.shadow-hvr:hover,.shadow-out-hvr:hover { box-shadow: 4px 4px 8px 0 rgba( 0, 0, 0, 0.2 ); }
.shadow-in-hvr:hover { box-shadow: inset 4px 4px 8px 0 rgba( 0, 0, 0, 0.2 ); }
/*

   BACKGROUND SIZE
   Docs: http://aircss.io/docs/themes/background-size/

   Media Query Extensions:
     -m  = medium
     -l  = large

*/

/*
  Often used in combination with background image set as an inline style
  on an html element.
*/

.cover { background-size: cover!important; }
.contain { background-size: contain!important; }
/* csslint outline-none: false */
.outline:focus { outline: 1px solid; }
.outline-transparent:focus { outline: 1px solid transparent; }
.outline-0:focus { outline: 0; }

.pointer:hover { cursor: pointer; }